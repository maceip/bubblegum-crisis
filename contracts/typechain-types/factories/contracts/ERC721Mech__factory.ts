/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721Mech,
  ERC721MechInterface,
} from "../../contracts/ERC721Mech";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "txGas",
        type: "uint256",
      },
    ],
    name: "exec",
    outputs: [
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600080553480156200001557600080fd5b50604051620017f4380380620017f48339810160408190526200003891620002c8565b604080516001600160a01b038416602082015280820183905281518082038301815260609091019091526200006d8162000076565b505050620003bb565b62000080620000e2565b5115620000d45760405162461bcd60e51b815260206004820152601360248201527f416c726561647920696e697469616c697a65640000000000000000000000000060448201526064015b60405180910390fd5b620000df816200015a565b50565b60606200015562000144604051606b60f91b6020820152602560fa1b60218201526001600160601b03193060601b166022820152600160f81b60368201526000906037016040516020818303038152906040528051906020012060001c905090565b6200023360201b6200066e1760201c565b905090565b600062000172826200028c60201b620006c41760201c565b905060008151602083016000f09050620001dd604051606b60f91b6020820152602560fa1b60218201526001600160601b03193060601b166022820152600160f81b60368201526000906037016040516020818303038152906040528051906020012060001c905090565b6001600160a01b0316816001600160a01b0316146200022e5760405162461bcd60e51b815260206004820152600c60248201526b15dc9a5d194819985a5b195960a21b6044820152606401620000cb565b505050565b6060813b6001811162000256575050604080516020810190915260008152919050565b8062000262816200031a565b9150506040519150601f19601f602083010116820160405280825280600160208401853c50919050565b6060815160016200029e919062000334565b82604051602001620002b292919062000350565b6040516020818303038152906040529050919050565b60008060408385031215620002dc57600080fd5b82516001600160a01b0381168114620002f457600080fd5b6020939093015192949293505050565b634e487b7160e01b600052601160045260246000fd5b6000816200032c576200032c62000304565b506000190190565b808201808211156200034a576200034a62000304565b92915050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b60058201526000600e82018190528251815b81811015620003a9576020818601810151600f8684010152016200038a565b5060009201600f019182525092915050565b61142980620003cb6000396000f3fe6080604052600436106100c55760003560e01c8063a4f9edbf1161007f578063bc197c8111610059578063bc197c8114610245578063c7dec3fc14610274578063f23a6e61146102a1578063fc0c546a146102ce57600080fd5b8063a4f9edbf146101d5578063affed0e0146101f5578063b0d691fe1461020a57600080fd5b806223de29146100d1578063150b7a02146100f85780631626ba7e1461014257806317d70f7c146101625780633a871cdd146101855780636d70f7ae146101a557600080fd5b366100cc57005b600080fd5b3480156100dd57600080fd5b506100f66100ec366004610d46565b5050505050505050565b005b34801561010457600080fd5b50610124610113366004610df7565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561014e57600080fd5b5061012461015d366004610f0d565b6102e3565b34801561016e57600080fd5b50610177610410565b604051908152602001610139565b34801561019157600080fd5b506101776101a0366004610f54565b610435565b3480156101b157600080fd5b506101c56101c0366004610fa8565b610473565b6040519015158152602001610139565b3480156101e157600080fd5b506100f66101f0366004610fc5565b610522565b34801561020157600080fd5b50600054610177565b34801561021657600080fd5b50730576a174d229e3cfa37253523e645a78a0c91b575b6040516001600160a01b039091168152602001610139565b34801561025157600080fd5b50610124610260366004611047565b63bc197c8160e01b98975050505050505050565b34801561028057600080fd5b5061029461028f3660046110e5565b61057f565b60405161013991906111ad565b3480156102ad57600080fd5b506101246102bc3660046111c0565b63f23a6e6160e01b9695505050505050565b3480156102da57600080fd5b5061022d610650565b600080600080610306856020810151604082015160609092015160001a92909190565b9094509250905060ff81166000036103d4578285830160200161032882610473565b15801561033e57506001600160a01b0382163014155b1561035957506001600160e01b0319945061040a9350505050565b604051630b135d3f60e11b81526001600160a01b03831690631626ba7e90610387908b90859060040161123c565b602060405180830381865afa1580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c89190611255565b9550505050505061040a565b6103e36101c0878386866106fc565b156103fb5750630b135d3f60e11b925061040a915050565b506001600160e01b0319925050505b92915050565b60008061041b61071a565b80602001905181019061042e919061127f565b9392505050565b600061043f610731565b6104498484610796565b905061045860408501856112ad565b905060000361046a5761046a84610869565b61042e826108be565b600080600061048061071a565b806020019051810190610493919061127f565b91509150836001600160a01b0316826001600160a01b0316636352211e836040518263ffffffff1660e01b81526004016104cf91815260200190565b602060405180830381865afa1580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051091906112f4565b6001600160a01b031614949350505050565b61052a61071a565b51156105735760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b61057c81610917565b50565b606061058a33610473565b806105a8575033730576a174d229e3cfa37253523e645a78a0c91b57145b61061a5760405162461bcd60e51b815260206004820152603e60248201527f4f6e6c792063616c6c61626c6520627920746865206d656368206f706572617460448201527f6f72206f722074686520656e74727920706f696e7420636f6e74726163740000606482015260840161056a565b600061063587878787871561062f578761098d565b5a61098d565b925090508061064657815160208301fd5b5095945050505050565b60008061065b61071a565b80602001905181019061040a91906112f4565b6060813b60018111610690575050604080516020810190915260008152919050565b8061069a81611327565b9150506040519150601f19601f602083010116820160405280825280600160208401853c50919050565b6060815160016106d4919061133e565b826040516020016106e6929190611351565b6040516020818303038152906040529050919050565b600080600061070d87878787610a7d565b9150915061064681610b41565b606061072c610727610c8b565b61066e565b905090565b33730576a174d229e3cfa37253523e645a78a0c91b57146107945760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161056a565b565b6000806107f0836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050630b135d3f60e11b6108468261080c6101408801886112ad565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102e392505050565b6001600160e01b0319161461085f57600191505061040a565b5060009392505050565b600080546020830135918061087d836113a8565b919050551461057c5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b604482015260640161056a565b801561057c57604051600090339060001990849084818181858888f193505050503d806000811461090b576040519150601f19603f3d011682016040523d82523d6000602084013e610910565b606091505b5050505050565b6000610922826106c4565b905060008151602083016000f09050610939610c8b565b6001600160a01b0316816001600160a01b0316146109885760405162461bcd60e51b815260206004820152600c60248201526b15dc9a5d194819985a5b195960a21b604482015260640161056a565b505050565b6000606060018460018111156109a5576109a56113c1565b03610a0f57866001600160a01b031683866040516109c391906113d7565b6000604051808303818686f4925050503d80600081146109ff576040519150601f19603f3d011682016040523d82523d6000602084013e610a04565b606091505b509092509050610a73565b866001600160a01b0316838787604051610a2991906113d7565b600060405180830381858888f193505050503d8060008114610a67576040519150601f19603f3d011682016040523d82523d6000602084013e610a6c565b606091505b5090925090505b9550959350505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610ab45750600090506003610b38565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610b08573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b3157600060019250925050610b38565b9150600090505b94509492505050565b6000816004811115610b5557610b556113c1565b03610b5d5750565b6001816004811115610b7157610b716113c1565b03610bbe5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161056a565b6002816004811115610bd257610bd26113c1565b03610c1f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161056a565b6003816004811115610c3357610c336113c1565b0361057c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161056a565b604051606b60f91b6020820152602560fa1b60218201526bffffffffffffffffffffffff193060601b166022820152600160f81b60368201526000906037016040516020818303038152906040528051906020012060001c905090565b6001600160a01b038116811461057c57600080fd5b60008083601f840112610d0f57600080fd5b50813567ffffffffffffffff811115610d2757600080fd5b602083019150836020828501011115610d3f57600080fd5b9250929050565b60008060008060008060008060c0898b031215610d6257600080fd5b8835610d6d81610ce8565b97506020890135610d7d81610ce8565b96506040890135610d8d81610ce8565b955060608901359450608089013567ffffffffffffffff80821115610db157600080fd5b610dbd8c838d01610cfd565b909650945060a08b0135915080821115610dd657600080fd5b50610de38b828c01610cfd565b999c989b5096995094979396929594505050565b600080600080600060808688031215610e0f57600080fd5b8535610e1a81610ce8565b94506020860135610e2a81610ce8565b935060408601359250606086013567ffffffffffffffff811115610e4d57600080fd5b610e5988828901610cfd565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e9157600080fd5b813567ffffffffffffffff80821115610eac57610eac610e6a565b604051601f8301601f19908116603f01168101908282118183101715610ed457610ed4610e6a565b81604052838152866020858801011115610eed57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610f2057600080fd5b82359150602083013567ffffffffffffffff811115610f3e57600080fd5b610f4a85828601610e80565b9150509250929050565b600080600060608486031215610f6957600080fd5b833567ffffffffffffffff811115610f8057600080fd5b84016101608187031215610f9357600080fd5b95602085013595506040909401359392505050565b600060208284031215610fba57600080fd5b813561042e81610ce8565b600060208284031215610fd757600080fd5b813567ffffffffffffffff811115610fee57600080fd5b610ffa84828501610e80565b949350505050565b60008083601f84011261101457600080fd5b50813567ffffffffffffffff81111561102c57600080fd5b6020830191508360208260051b8501011115610d3f57600080fd5b60008060008060008060008060a0898b03121561106357600080fd5b883561106e81610ce8565b9750602089013561107e81610ce8565b9650604089013567ffffffffffffffff8082111561109b57600080fd5b6110a78c838d01611002565b909850965060608b01359150808211156110c057600080fd5b6110cc8c838d01611002565b909650945060808b0135915080821115610dd657600080fd5b600080600080600060a086880312156110fd57600080fd5b853561110881610ce8565b945060208601359350604086013567ffffffffffffffff81111561112b57600080fd5b61113788828901610e80565b93505060608601356002811061114c57600080fd5b949793965091946080013592915050565b60005b83811015611178578181015183820152602001611160565b50506000910152565b6000815180845261119981602086016020860161115d565b601f01601f19169290920160200192915050565b60208152600061042e6020830184611181565b60008060008060008060a087890312156111d957600080fd5b86356111e481610ce8565b955060208701356111f481610ce8565b94506040870135935060608701359250608087013567ffffffffffffffff81111561121e57600080fd5b61122a89828a01610cfd565b979a9699509497509295939492505050565b828152604060208201526000610ffa6040830184611181565b60006020828403121561126757600080fd5b81516001600160e01b03198116811461042e57600080fd5b6000806040838503121561129257600080fd5b825161129d81610ce8565b6020939093015192949293505050565b6000808335601e198436030181126112c457600080fd5b83018035915067ffffffffffffffff8211156112df57600080fd5b602001915036819003821315610d3f57600080fd5b60006020828403121561130657600080fd5b815161042e81610ce8565b634e487b7160e01b600052601160045260246000fd5b60008161133657611336611311565b506000190190565b8082018082111561040a5761040a611311565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b60058201526000600e8201819052825161139a81600f85016020870161115d565b91909101600f019392505050565b6000600182016113ba576113ba611311565b5060010190565b634e487b7160e01b600052602160045260246000fd5b600082516113e981846020870161115d565b919091019291505056fea264697066735822122081fedef1fe454459c787bffe4b9800ec45cffbaf8e9a579afb460b94668dd27764736f6c63430008110033";

type ERC721MechConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MechConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Mech__factory extends ContractFactory {
  constructor(...args: ERC721MechConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Mech> {
    return super.deploy(
      _token,
      _tokenId,
      overrides || {}
    ) as Promise<ERC721Mech>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _tokenId, overrides || {});
  }
  override attach(address: string): ERC721Mech {
    return super.attach(address) as ERC721Mech;
  }
  override connect(signer: Signer): ERC721Mech__factory {
    return super.connect(signer) as ERC721Mech__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MechInterface {
    return new utils.Interface(_abi) as ERC721MechInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Mech {
    return new Contract(address, _abi, signerOrProvider) as ERC721Mech;
  }
}
