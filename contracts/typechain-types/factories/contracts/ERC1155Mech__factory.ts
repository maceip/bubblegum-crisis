/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC1155Mech,
  ERC1155MechInterface,
} from "../../contracts/ERC1155Mech";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_minBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_minTotalBalance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "txGas",
        type: "uint256",
      },
    ],
    name: "exec",
    outputs: [
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "minBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC1155",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052600080553480156200001557600080fd5b5060405162001e4038038062001e40833981016040819052620000389162000454565b60008484848460405160200162000053949392919062000518565b60408051601f19818403018152919052905062000070816200007b565b50505050506200061b565b62000085620001a0565b5115620000d95760405162461bcd60e51b815260206004820152601360248201527f416c726561647920696e697469616c697a65640000000000000000000000000060448201526064015b60405180910390fd5b60008082806020019051810190620000f2919062000454565b50925092505060008251116200014b5760405162461bcd60e51b815260206004820152601560248201527f4e6f20746f6b656e204944732070726f766964656400000000000000000000006044820152606401620000d0565b8051825114620001905760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401620000d0565b6200019b8362000218565b505050565b60606200021362000202604051606b60f91b6020820152602560fa1b60218201526001600160601b03193060601b166022820152600160f81b60368201526000906037016040516020818303038152906040528051906020012060001c905090565b620002ec60201b620008821760201c565b905090565b600062000230826200034560201b620008d81760201c565b905060008151602083016000f090506200029b604051606b60f91b6020820152602560fa1b60218201526001600160601b03193060601b166022820152600160f81b60368201526000906037016040516020818303038152906040528051906020012060001c905090565b6001600160a01b0316816001600160a01b0316146200019b5760405162461bcd60e51b815260206004820152600c60248201526b15dc9a5d194819985a5b195960a21b6044820152606401620000d0565b6060813b600181116200030f575050604080516020810190915260008152919050565b806200031b816200057a565b9150506040519150601f19601f602083010116820160405280825280600160208401853c50919050565b60608151600162000357919062000594565b826040516020016200036b929190620005b0565b6040516020818303038152906040529050919050565b6001600160a01b03811681146200039757600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620003c257600080fd5b815160206001600160401b0380831115620003e157620003e16200039a565b8260051b604051601f19603f830116810181811084821117156200040957620004096200039a565b6040529384528581018301938381019250878511156200042857600080fd5b83870191505b8482101562000449578151835291830191908301906200042e565b979650505050505050565b600080600080608085870312156200046b57600080fd5b8451620004788162000381565b60208601519094506001600160401b03808211156200049657600080fd5b620004a488838901620003b0565b94506040870151915080821115620004bb57600080fd5b50620004ca87828801620003b0565b606096909601519497939650505050565b600081518084526020808501945080840160005b838110156200050d57815187529582019590820190600101620004ef565b509495945050505050565b6001600160a01b03851681526080602082018190526000906200053e90830186620004db565b8281036040840152620005528186620004db565b91505082606083015295945050505050565b634e487b7160e01b600052601160045260246000fd5b6000816200058c576200058c62000564565b506000190190565b80820180821115620005aa57620005aa62000564565b92915050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b60058201526000600e82018190528251815b8181101562000609576020818601810151600f868401015201620005ea565b5060009201600f019182525092915050565b611815806200062b6000396000f3fe6080604052600436106100ea5760003560e01c8063a4f9edbf1161008a578063c7dec3fc11610059578063c7dec3fc146102b9578063d58778d6146102e6578063f23a6e6114610306578063fc0c546a1461033357600080fd5b8063a4f9edbf1461021a578063affed0e01461023a578063b0d691fe1461024f578063bc197c811461028a57600080fd5b80631626ba7e116100c65780631626ba7e1461018a5780631ba313f2146101aa5780633a871cdd146101ca5780636d70f7ae146101ea57600080fd5b806223de29146100f657806230b7b61461011d578063150b7a021461014557600080fd5b366100f157005b600080fd5b34801561010257600080fd5b5061011b610111366004610f57565b5050505050505050565b005b34801561012957600080fd5b50610132610348565b6040519081526020015b60405180910390f35b34801561015157600080fd5b50610171610160366004611007565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161013c565b34801561019657600080fd5b506101716101a536600461112e565b61036f565b3480156101b657600080fd5b506101326101c5366004611174565b61049c565b3480156101d657600080fd5b506101326101e536600461118d565b6104e0565b3480156101f657600080fd5b5061020a6102053660046111e0565b610525565b604051901515815260200161013c565b34801561022657600080fd5b5061011b6102353660046111fd565b610658565b34801561024657600080fd5b50600054610132565b34801561025b57600080fd5b50730576a174d229e3cfa37253523e645a78a0c91b575b6040516001600160a01b03909116815260200161013c565b34801561029657600080fd5b506101716102a536600461127d565b63bc197c8160e01b98975050505050505050565b3480156102c557600080fd5b506102d96102d436600461131a565b610760565b60405161013c91906113e1565b3480156102f257600080fd5b50610132610301366004611174565b610831565b34801561031257600080fd5b506101716103213660046113f4565b63f23a6e6160e01b9695505050505050565b34801561033f57600080fd5b50610272610864565b600080610353610910565b80602001905181019061036691906114ee565b95945050505050565b600080600080610392856020810151604082015160609092015160001a92909190565b9094509250905060ff811660000361046057828583016020016103b482610525565b1580156103ca57506001600160a01b0382163014155b156103e557506001600160e01b031994506104969350505050565b604051630b135d3f60e11b81526001600160a01b03831690631626ba7e90610413908b90859060040161156c565b602060405180830381865afa158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190611585565b95505050505050610496565b61046f61020587838686610927565b156104875750630b135d3f60e11b9250610496915050565b506001600160e01b0319925050505b92915050565b6000806104a7610910565b8060200190518101906104ba91906115af565b925050508083815181106104d0576104d0611625565b6020026020010151915050919050565b60006104ea610945565b6104f484846109aa565b9050610503604085018561163b565b90506000036105155761051584610a7d565b61051e82610ad5565b9392505050565b6000806000806000610535610910565b80602001905181019061054891906114ee565b93509350935093506000805b845181101561064c576000866001600160a01b031662fdd58e8a88858151811061058057610580611625565b60200260200101516040518363ffffffff1660e01b81526004016105b99291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190611681565b905084828151811061060e5761060e611625565b602002602001015181101561062c5750600098975050505050505050565b61063681846116b0565b9250508080610644906116c3565b915050610554565b50101595945050505050565b610660610910565b51156106a95760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b600080828060200190518101906106c091906114ee565b509250925050600082511161070f5760405162461bcd60e51b8152602060048201526015602482015274139bc81d1bdad95b8812511cc81c1c9bdd9a591959605a1b60448201526064016106a0565b80518251146107525760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b60448201526064016106a0565b61075b83610b2e565b505050565b606061076b33610525565b80610789575033730576a174d229e3cfa37253523e645a78a0c91b57145b6107fb5760405162461bcd60e51b815260206004820152603e60248201527f4f6e6c792063616c6c61626c6520627920746865206d656368206f706572617460448201527f6f72206f722074686520656e74727920706f696e7420636f6e7472616374000060648201526084016106a0565b60006108168787878787156108105787610b9f565b5a610b9f565b925090508061082757815160208301fd5b5095945050505050565b60008061083c610910565b80602001905181019061084f91906116dc565b9150508083815181106104d0576104d0611625565b60008061086f610910565b8060200190518101906104969190611722565b6060813b600181116108a4575050604080516020810190915260008152919050565b806108ae8161173f565b9150506040519150601f19601f602083010116820160405280825280600160208401853c50919050565b6060815160016108e891906116b0565b826040516020016108fa929190611756565b6040516020818303038152906040529050919050565b606061092261091d610c8f565b610882565b905090565b600080600061093887878787610cec565b9150915061082781610db0565b33730576a174d229e3cfa37253523e645a78a0c91b57146109a85760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064016106a0565b565b600080610a04836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050630b135d3f60e11b610a5a82610a2061014088018861163b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061036f92505050565b6001600160e01b03191614610a73576001915050610496565b5060009392505050565b6000805460208301359180610a91836116c3565b9190505514610ad25760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b60448201526064016106a0565b50565b8015610ad257604051600090339060001990849084818181858888f193505050503d8060008114610b22576040519150601f19603f3d011682016040523d82523d6000602084013e610b27565b606091505b5050505050565b6000610b39826108d8565b905060008151602083016000f09050610b50610c8f565b6001600160a01b0316816001600160a01b03161461075b5760405162461bcd60e51b815260206004820152600c60248201526b15dc9a5d194819985a5b195960a21b60448201526064016106a0565b600060606001846001811115610bb757610bb76117ad565b03610c2157866001600160a01b03168386604051610bd591906117c3565b6000604051808303818686f4925050503d8060008114610c11576040519150601f19603f3d011682016040523d82523d6000602084013e610c16565b606091505b509092509050610c85565b866001600160a01b0316838787604051610c3b91906117c3565b600060405180830381858888f193505050503d8060008114610c79576040519150601f19603f3d011682016040523d82523d6000602084013e610c7e565b606091505b5090925090505b9550959350505050565b604051606b60f91b6020820152602560fa1b60218201526bffffffffffffffffffffffff193060601b166022820152600160f81b60368201526000906037016040516020818303038152906040528051906020012060001c905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d235750600090506003610da7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d77573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610da057600060019250925050610da7565b9150600090505b94509492505050565b6000816004811115610dc457610dc46117ad565b03610dcc5750565b6001816004811115610de057610de06117ad565b03610e2d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106a0565b6002816004811115610e4157610e416117ad565b03610e8e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106a0565b6003816004811115610ea257610ea26117ad565b03610ad25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106a0565b6001600160a01b0381168114610ad257600080fd5b60008083601f840112610f2157600080fd5b5081356001600160401b03811115610f3857600080fd5b602083019150836020828501011115610f5057600080fd5b9250929050565b60008060008060008060008060c0898b031215610f7357600080fd5b8835610f7e81610efa565b97506020890135610f8e81610efa565b96506040890135610f9e81610efa565b95506060890135945060808901356001600160401b0380821115610fc157600080fd5b610fcd8c838d01610f0f565b909650945060a08b0135915080821115610fe657600080fd5b50610ff38b828c01610f0f565b999c989b5096995094979396929594505050565b60008060008060006080868803121561101f57600080fd5b853561102a81610efa565b9450602086013561103a81610efa565b93506040860135925060608601356001600160401b0381111561105c57600080fd5b61106888828901610f0f565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156110b7576110b7611079565b604052919050565b600082601f8301126110d057600080fd5b81356001600160401b038111156110e9576110e9611079565b6110fc601f8201601f191660200161108f565b81815284602083860101111561111157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561114157600080fd5b8235915060208301356001600160401b0381111561115e57600080fd5b61116a858286016110bf565b9150509250929050565b60006020828403121561118657600080fd5b5035919050565b6000806000606084860312156111a257600080fd5b83356001600160401b038111156111b857600080fd5b840161016081870312156111cb57600080fd5b95602085013595506040909401359392505050565b6000602082840312156111f257600080fd5b813561051e81610efa565b60006020828403121561120f57600080fd5b81356001600160401b0381111561122557600080fd5b611231848285016110bf565b949350505050565b60008083601f84011261124b57600080fd5b5081356001600160401b0381111561126257600080fd5b6020830191508360208260051b8501011115610f5057600080fd5b60008060008060008060008060a0898b03121561129957600080fd5b88356112a481610efa565b975060208901356112b481610efa565b965060408901356001600160401b03808211156112d057600080fd5b6112dc8c838d01611239565b909850965060608b01359150808211156112f557600080fd5b6113018c838d01611239565b909650945060808b0135915080821115610fe657600080fd5b600080600080600060a0868803121561133257600080fd5b853561133d81610efa565b94506020860135935060408601356001600160401b0381111561135f57600080fd5b61136b888289016110bf565b93505060608601356002811061138057600080fd5b949793965091946080013592915050565b60005b838110156113ac578181015183820152602001611394565b50506000910152565b600081518084526113cd816020860160208601611391565b601f01601f19169290920160200192915050565b60208152600061051e60208301846113b5565b60008060008060008060a0878903121561140d57600080fd5b863561141881610efa565b9550602087013561142881610efa565b9450604087013593506060870135925060808701356001600160401b0381111561145157600080fd5b61145d89828a01610f0f565b979a9699509497509295939492505050565b600082601f83011261148057600080fd5b815160206001600160401b0382111561149b5761149b611079565b8160051b6114aa82820161108f565b92835284810182019282810190878511156114c457600080fd5b83870192505b848310156114e3578251825291830191908301906114ca565b979650505050505050565b6000806000806080858703121561150457600080fd5b845161150f81610efa565b60208601519094506001600160401b038082111561152c57600080fd5b6115388883890161146f565b9450604087015191508082111561154e57600080fd5b5061155b8782880161146f565b606096909601519497939650505050565b82815260406020820152600061123160408301846113b5565b60006020828403121561159757600080fd5b81516001600160e01b03198116811461051e57600080fd5b6000806000606084860312156115c457600080fd5b83516115cf81610efa565b60208501519093506001600160401b03808211156115ec57600080fd5b6115f88783880161146f565b9350604086015191508082111561160e57600080fd5b5061161b8682870161146f565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261165257600080fd5b8301803591506001600160401b0382111561166c57600080fd5b602001915036819003821315610f5057600080fd5b60006020828403121561169357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104965761049661169a565b6000600182016116d5576116d561169a565b5060010190565b600080604083850312156116ef57600080fd5b82516116fa81610efa565b60208401519092506001600160401b0381111561171657600080fd5b61116a8582860161146f565b60006020828403121561173457600080fd5b815161051e81610efa565b60008161174e5761174e61169a565b506000190190565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b60058201526000600e8201819052825161179f81600f850160208701611391565b91909101600f019392505050565b634e487b7160e01b600052602160045260246000fd5b600082516117d5818460208701611391565b919091019291505056fea264697066735822122032713306f922ed9f37743a5139131136ff3cc75925fa26a0d5ed7effa552b66d64736f6c63430008110033";

type ERC1155MechConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MechConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Mech__factory extends ContractFactory {
  constructor(...args: ERC1155MechConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _tokenIds: PromiseOrValue<BigNumberish>[],
    _minBalances: PromiseOrValue<BigNumberish>[],
    _minTotalBalance: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Mech> {
    return super.deploy(
      _token,
      _tokenIds,
      _minBalances,
      _minTotalBalance,
      overrides || {}
    ) as Promise<ERC1155Mech>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _tokenIds: PromiseOrValue<BigNumberish>[],
    _minBalances: PromiseOrValue<BigNumberish>[],
    _minTotalBalance: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _tokenIds,
      _minBalances,
      _minTotalBalance,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Mech {
    return super.attach(address) as ERC1155Mech;
  }
  override connect(signer: Signer): ERC1155Mech__factory {
    return super.connect(signer) as ERC1155Mech__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MechInterface {
    return new utils.Interface(_abi) as ERC1155MechInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Mech {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Mech;
  }
}
