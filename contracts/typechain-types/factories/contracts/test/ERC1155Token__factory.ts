/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155Token,
  ERC1155TokenInterface,
} from "../../../contracts/test/ERC1155Token";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201909152600c81526b22a92198989a9aaa37b5b2b760a11b6020820152620000408162000047565b50620001ca565b6002620000558282620000fe565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200008457607f821691505b602082108103620000a557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000f957600081815260208120601f850160051c81016020861015620000d45750805b601f850160051c820191505b81811015620000f557828155600101620000e0565b5050505b505050565b81516001600160401b038111156200011a576200011a62000059565b62000132816200012b84546200006f565b84620000ab565b602080601f8311600181146200016a5760008415620001515750858301515b600019600386901b1c1916600185901b178555620000f5565b600085815260208120601f198616915b828110156200019b578886015182559484019460019091019084016200017a565b5085821015620001ba5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61151980620001da6000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80634e1273f4116100665780634e1273f4146101155780635e315f8b14610135578063a22cb46514610148578063e985e9c51461015b578063f242432a1461019757600080fd5b8062fdd58e1461009757806301ffc9a7146100bd5780630e89341c146100e05780632eb2c2d614610100575b600080fd5b6100aa6100a5366004610c7b565b6101aa565b6040519081526020015b60405180910390f35b6100d06100cb366004610cbe565b610243565b60405190151581526020016100b4565b6100f36100ee366004610ce2565b610293565b6040516100b49190610d41565b61011361010e366004610ea0565b610327565b005b610128610123366004610f4a565b610373565b6040516100b49190611050565b610113610143366004611063565b61049d565b6101136101563660046110c4565b6104af565b6100d0610169366004611100565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101136101a5366004611133565b6104be565b60006001600160a01b03831661021a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061027457506001600160e01b031982166303a24d0760e21b145b8061023d57506301ffc9a760e01b6001600160e01b031983161461023d565b6060600280546102a290611198565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90611198565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b50505050509050919050565b6001600160a01b03851633148061034357506103438533610169565b61035f5760405162461bcd60e51b8152600401610211906111d2565b61036c8585858585610503565b5050505050565b606081518351146103d85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610211565b6000835167ffffffffffffffff8111156103f4576103f4610d54565b60405190808252806020026020018201604052801561041d578160200160208202803683370190505b50905060005b84518110156104955761046885828151811061044157610441611220565b602002602001015185838151811061045b5761045b611220565b60200260200101516101aa565b82828151811061047a5761047a611220565b602090810291909101015261048e8161124c565b9050610423565b509392505050565b6104a9848484846106e0565b50505050565b6104ba3383836107f4565b5050565b6001600160a01b0385163314806104da57506104da8533610169565b6104f65760405162461bcd60e51b8152600401610211906111d2565b61036c85858585856108d4565b81518351146105655760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610211565b6001600160a01b03841661058b5760405162461bcd60e51b815260040161021190611265565b3360005b84518110156106725760008582815181106105ac576105ac611220565b6020026020010151905060008583815181106105ca576105ca611220565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561061a5760405162461bcd60e51b8152600401610211906112aa565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106579084906112f4565b925050819055505050508061066b9061124c565b905061058f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516106c2929190611307565b60405180910390a46106d88187878787876109fe565b505050505050565b6001600160a01b0384166107405760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610211565b33600061074c85610b59565b9050600061075985610b59565b90506000868152602081815260408083206001600160a01b038b1684529091528120805487929061078b9084906112f4565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46107eb83600089898989610ba4565b50505050505050565b816001600160a01b0316836001600160a01b0316036108675760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610211565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108fa5760405162461bcd60e51b815260040161021190611265565b33600061090685610b59565b9050600061091385610b59565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156109565760405162461bcd60e51b8152600401610211906112aa565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906109939084906112f4565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109f3848a8a8a8a8a610ba4565b505050505050505050565b6001600160a01b0384163b156106d85760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a429089908990889088908890600401611335565b6020604051808303816000875af1925050508015610a7d575060408051601f3d908101601f19168201909252610a7a91810190611393565b60015b610b2957610a896113b0565b806308c379a003610ac25750610a9d6113cc565b80610aa85750610ac4565b8060405162461bcd60e51b81526004016102119190610d41565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610211565b6001600160e01b0319811663bc197c8160e01b146107eb5760405162461bcd60e51b815260040161021190611456565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b9357610b93611220565b602090810291909101015292915050565b6001600160a01b0384163b156106d85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610be8908990899088908890889060040161149e565b6020604051808303816000875af1925050508015610c23575060408051601f3d908101601f19168201909252610c2091810190611393565b60015b610c2f57610a896113b0565b6001600160e01b0319811663f23a6e6160e01b146107eb5760405162461bcd60e51b815260040161021190611456565b80356001600160a01b0381168114610c7657600080fd5b919050565b60008060408385031215610c8e57600080fd5b610c9783610c5f565b946020939093013593505050565b6001600160e01b031981168114610cbb57600080fd5b50565b600060208284031215610cd057600080fd5b8135610cdb81610ca5565b9392505050565b600060208284031215610cf457600080fd5b5035919050565b6000815180845260005b81811015610d2157602081850181015186830182015201610d05565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610cdb6020830184610cfb565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610d9057610d90610d54565b6040525050565b600067ffffffffffffffff821115610db157610db1610d54565b5060051b60200190565b600082601f830112610dcc57600080fd5b81356020610dd982610d97565b604051610de68282610d6a565b83815260059390931b8501820192828101915086841115610e0657600080fd5b8286015b84811015610e215780358352918301918301610e0a565b509695505050505050565b600082601f830112610e3d57600080fd5b813567ffffffffffffffff811115610e5757610e57610d54565b604051610e6e601f8301601f191660200182610d6a565b818152846020838601011115610e8357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610eb857600080fd5b610ec186610c5f565b9450610ecf60208701610c5f565b9350604086013567ffffffffffffffff80821115610eec57600080fd5b610ef889838a01610dbb565b94506060880135915080821115610f0e57600080fd5b610f1a89838a01610dbb565b93506080880135915080821115610f3057600080fd5b50610f3d88828901610e2c565b9150509295509295909350565b60008060408385031215610f5d57600080fd5b823567ffffffffffffffff80821115610f7557600080fd5b818501915085601f830112610f8957600080fd5b81356020610f9682610d97565b604051610fa38282610d6a565b83815260059390931b8501820192828101915089841115610fc357600080fd5b948201945b83861015610fe857610fd986610c5f565b82529482019490820190610fc8565b96505086013592505080821115610ffe57600080fd5b5061100b85828601610dbb565b9150509250929050565b600081518084526020808501945080840160005b8381101561104557815187529582019590820190600101611029565b509495945050505050565b602081526000610cdb6020830184611015565b6000806000806080858703121561107957600080fd5b61108285610c5f565b93506020850135925060408501359150606085013567ffffffffffffffff8111156110ac57600080fd5b6110b887828801610e2c565b91505092959194509250565b600080604083850312156110d757600080fd5b6110e083610c5f565b9150602083013580151581146110f557600080fd5b809150509250929050565b6000806040838503121561111357600080fd5b61111c83610c5f565b915061112a60208401610c5f565b90509250929050565b600080600080600060a0868803121561114b57600080fd5b61115486610c5f565b945061116260208701610c5f565b93506040860135925060608601359150608086013567ffffffffffffffff81111561118c57600080fd5b610f3d88828901610e2c565b600181811c908216806111ac57607f821691505b6020821081036111cc57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161125e5761125e611236565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b8082018082111561023d5761023d611236565b60408152600061131a6040830185611015565b828103602084015261132c8185611015565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061136190830186611015565b82810360608401526113738186611015565b905082810360808401526113878185610cfb565b98975050505050505050565b6000602082840312156113a557600080fd5b8151610cdb81610ca5565b600060033d11156113c95760046000803e5060005160e01c5b90565b600060443d10156113da5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561140a57505050505090565b82850191508151818111156114225750505050505090565b843d870101602082850101111561143c5750505050505090565b61144b60208286010187610d6a565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114d890830184610cfb565b97965050505050505056fea264697066735822122041a4e502a51e94ffd3aeeb2df916e684576f671397cfa585fbffa1ce31f2fff364736f6c63430008110033";

type ERC1155TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Token__factory extends ContractFactory {
  constructor(...args: ERC1155TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Token> {
    return super.deploy(overrides || {}) as Promise<ERC1155Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Token {
    return super.attach(address) as ERC1155Token;
  }
  override connect(signer: Signer): ERC1155Token__factory {
    return super.connect(signer) as ERC1155Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155TokenInterface {
    return new utils.Interface(_abi) as ERC1155TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Token {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Token;
  }
}
