/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Receiver,
  ReceiverInterface,
} from "../../../contracts/base/Receiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610426806100206000396000f3fe6080604052600436106100425760003560e01c806223de291461004e578063150b7a0214610075578063bc197c81146100be578063f23a6e61146100ed57600080fd5b3661004957005b600080fd5b34801561005a57600080fd5b5061007361006936600461017f565b5050505050505050565b005b34801561008157600080fd5b506100a161009036600461022a565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200160405180910390f35b3480156100ca57600080fd5b506100a16100d93660046102de565b63bc197c8160e01b98975050505050505050565b3480156100f957600080fd5b506100a1610108366004610378565b63f23a6e6160e01b9695505050505050565b80356001600160a01b038116811461013157600080fd5b919050565b60008083601f84011261014857600080fd5b50813567ffffffffffffffff81111561016057600080fd5b60208301915083602082850101111561017857600080fd5b9250929050565b60008060008060008060008060c0898b03121561019b57600080fd5b6101a48961011a565b97506101b260208a0161011a565b96506101c060408a0161011a565b955060608901359450608089013567ffffffffffffffff808211156101e457600080fd5b6101f08c838d01610136565b909650945060a08b013591508082111561020957600080fd5b506102168b828c01610136565b999c989b5096995094979396929594505050565b60008060008060006080868803121561024257600080fd5b61024b8661011a565b94506102596020870161011a565b935060408601359250606086013567ffffffffffffffff81111561027c57600080fd5b61028888828901610136565b969995985093965092949392505050565b60008083601f8401126102ab57600080fd5b50813567ffffffffffffffff8111156102c357600080fd5b6020830191508360208260051b850101111561017857600080fd5b60008060008060008060008060a0898b0312156102fa57600080fd5b6103038961011a565b975061031160208a0161011a565b9650604089013567ffffffffffffffff8082111561032e57600080fd5b61033a8c838d01610299565b909850965060608b013591508082111561035357600080fd5b61035f8c838d01610299565b909650945060808b013591508082111561020957600080fd5b60008060008060008060a0878903121561039157600080fd5b61039a8761011a565b95506103a86020880161011a565b94506040870135935060608701359250608087013567ffffffffffffffff8111156103d257600080fd5b6103de89828a01610136565b979a969950949750929593949250505056fea264697066735822122022a0dde71dad3779f0db82be2b0af08cd123a93fef2c2d8c78b9e7fc3bd7693764736f6c63430008110033";

type ReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Receiver__factory extends ContractFactory {
  constructor(...args: ReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Receiver> {
    return super.deploy(overrides || {}) as Promise<Receiver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Receiver {
    return super.attach(address) as Receiver;
  }
  override connect(signer: Signer): Receiver__factory {
    return super.connect(signer) as Receiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiverInterface {
    return new utils.Interface(_abi) as ReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Receiver {
    return new Contract(address, _abi, signerOrProvider) as Receiver;
  }
}
